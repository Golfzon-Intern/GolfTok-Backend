<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.golfzon.golftok.mapper.UsersMapper">

	<resultMap id="usersResult" type="com.golfzon.golftok.model.TokUsers">
		<id property="userId" column="user_id"/>
		<result property="userName" column="user_name" />
		<result property="userNickname" column="user_nickname" />
		<result property="userPassword" column="user_password" />
		<result property="userIcon" column="user_icon" />
		<result property="introductionMessage" column="introduction_message" />
		<result property="userGrade" column="user_grade" />
		<result property="followingCount" column="following_count" />
		<result property="followerCount" column="follower_count" />
		<result property="roleModel" column="role_model" />
		<result property="handicap" column="handicap" />
	</resultMap>
	
	<resultMap id="followResult" type="com.golfzon.golftok.model.Follow">
		<id property="followId" column="follow_id"/>
		<result property="userId" column="user_id" />
		<result property="friendId" column="friend_id" />
	</resultMap>
	
	<resultMap id="postsResult" type="com.golfzon.golftok.model.TokPosts">
		<id property="postId" column="post_id"/>
		<result property="userId" column="user_id" />
		<result property="postContent" column="post_content" />
		<result property="videoRoot" column="video_root" />
		<result property="uploadDate" column="upload_date" />
		<result property="likeCount" column="like_count" />
		<result property="commentCount" column="comment_count" />
		<result property="locations" column="locations" />
		<result property="postThumbnail" column="post_thumbnail" />
		<result property="golfClub" column="golf_club" />
	</resultMap>

	
	<!-- 내 골프 친구 5개 보기 (사이드 메뉴) -->
	<select id="getFiveMyFollowing" parameterType="int" resultType="HashMap">
		select 
			TOP 5 
			u.user_id as userId
			, u.user_name as userName
			, u.user_nickname as userNickname
			, u.user_icon as userIcon 
			, u.user_grade as userGrade
		from 
			follow as f with(nolock)
			inner join 
			tok_users as u with(nolock) on f.[friend_id]=u.[user_id]
		where 
			f.user_id=#{userId} 
	</select>
	

	<!-- 내 골프 친구 모두 보기 -->
	<select id="getAllMyFollowing" parameterType="int" resultType="HashMap">
		select 
			u.user_id as userId
			, u.user_name as userName
			, u.user_nickname as userNickname
			, u.user_icon as userIcon 
		from 
			follow as f with(nolock)
			inner join 
			tok_users as u with(nolock) on f.[friend_id]=u.[user_id]
		where 
			f.user_id=#{userId} and 
	</select>
	
	
	<!-- 로그인 했을 경우-추천 계정 5개 보기 : 자신과 골프 등급과 같거나 핸디가 비슷한 계정 추천 -->
	<select id="getRecommendedFriedns5ByOrders" parameterType="HashMap" resultType="HashMap">
		select
			TOP 5
			*
		from (
			select 
				user_id as userId
				, user_name as userName
				, user_nickname as userNickname
				, user_icon as userIcon
				, user_grade as userGrade
			from 
				tok_users with(nolock)
			where 
				user_grade=#{userGrade} or
				handicap BETWEEN #{handicap}-4 AND #{handicap}+4
		
			EXCEPT
		
			select 
					u.user_id as userId
					, u.user_name as userName
					, u.user_nickname as userNickname
					, u.user_icon as userIcon 
					, u.user_grade as userGrade
				from 
					follow as f with(nolock)
					inner join 
					tok_users as u with(nolock) on f.[friend_id]=u.[user_id]
				where 
					f.user_id=#{userId}
			)as A
	</select>

	<!-- 로그인 안했을 경우-추천 계정 5개 보기 : 일주일 간 누적 좋아요를 많이 받은 계정 추천 -->
	<select id="getRecommendedFriedns5ByLikeCount" parameterType="int" resultType="HashMap">
		select 
			TOP 5 
			u.user_id as userId
			, user_name as userName
			, user_nickname as userNickname
			, user_icon as userIcon
			, sum(like_count) as allLikeCount
			, user_grade as userGrade
		from 
			tok_users u with(nolock)
			inner join
			tok_posts p with(nolock) on u.[user_id]=p.[user_id]
		where 
			upload_date<![CDATA[ >= ]]>(select DATEADD(dd,-7,getdate()))
		group by u.user_id, user_name, user_icon, user_nickname, user_grade, handicap
		order by allLikeCount DESC
	</select>
	
	<!-- userName으로 user 객체 가져오기 -->
	<select id="getUserByUserName" parameterType="String" resultMap="usersResult">
		select 
			* 
		from 
			tok_users with(nolock)
		where 
			user_name=#{userName}
	</select>

	<!-- userId로 user 객체 가져오기 -->
	<select id="getUserByUserId" parameterType="int" resultType="HashMap">
		select 
			user_id as userId
			, user_name as userName
			, user_nickname as userNickname
			, user_icon as userIcon
			, introduction_message as introductionMessage
			, user_grade as userGrade
			, following_count as followingCount
			, follower_count as followerCount
			, user_grade as userGrade
			, handicap
			, role_model as roleModel
		from 
			tok_users with(nolock)
		where 
			user_id=#{userId}
	</select>

	<!-- userName으로 user 객체 가져오기 -->
	<select id="getUserByUserNameExceptPwd" parameterType="String" resultType="HashMap">
		select 
			user_id as userId
			, user_name as userName
			, user_nickname as userNickname
			, user_icon as userIcon
			, introduction_message as introductionMessage
			, user_grade as userGrade
			, following_count as followingCount
			, follower_count as followerCount
			, user_grade as userGrade
			, handicap
		from 
			tok_users with(nolock)
		where 
			user_name=#{userName}
	</select>
	
	<!-- userName으로 userId 가져오기 -->
	<select id="getUserIdByUserName" parameterType="String" resultType="int">
		select 
			user_id 
		from 
			tok_users with(nolock)
		where 
			user_name=#{userName}
	</select>
	
	<!-- 팔로우 조회 -->
	<select id="getFollowing" parameterType="HashMap" resultType="int">
		select 
			count(*) as flag
		from 
			follow with(nolock)
		where
			user_id=#{userId} and
			friend_id=#{friendId}
	</select>
	
	<!-- 팔로우 하기 -->
	<insert id="following" parameterType="HashMap">
		<selectKey resultType="integer" keyProperty="followId" order="BEFORE">
			select 
				MAX(follow_id)+1 
			from 
				follow with(nolock)
		</selectKey>
		insert into follow values
			(#{followId},#{userId},#{friendId})
	</insert>
	
	<!-- 팔로우 취소 -->
	<insert id="unfollowing" parameterType="HashMap">
		delete
		from
			follow
		where
			user_id=#{userId} and
			friend_id=#{friendId}
	</insert>
	
	
	<!-- 팔로워 수 +1 -->
	<update id="increaseFollower" parameterType="int">
		update 
			tok_users
		set 
			follower_count+=1
		where 
			user_id=#{friendId}
	</update>
	
	<!-- 팔로워 수 -1 -->
	<update id="decreaseFollower" parameterType="int">
		update 
			tok_users
		set 
			follower_count-=1
		where 
			user_id=#{friendId}
	</update>
	
	<!-- 팔로잉 수 +1 -->
	<update id="increaseFollowing" parameterType="int">
		update 
			tok_users
		set 
			following_count+=1
		where 
			user_id=#{userId}
	</update>
	
	<!-- 팔로잉 수 -1 -->
	<update id="decreaseFollowing" parameterType="int">
		update 
			tok_users
		set 
			following_count-=1
		where 
			user_id=#{userId}
	</update>
	
	<!-- id로 비밀번호 얻기 -->
	<select id="getPasswordByUserName" parameterType="String" resultType="String">
		select 
			user_password 
		from 
			tok_users with(nolock)
		where 
			user_name=#{userName}
	</select>
	
	<!-- 내가 팔로우 한 계정 동영상 모아보기 -->
	<select id="getFollowingPost" parameterType="com.golfzon.golftok.model.Criteria" resultType="HashMap">
		select 
			post_id as postId
			, post_content as postContent
			, video_root as videoRoot
			, like_count as likeCount
			, comment_count as commentCount
			, golf_club as golfClub
			, CONVERT(CHAR(10), upload_date, 23) as uploadDate
			, post_thumbnail as postThumbnail
			, locations,u.user_id as userId
			, u.user_name as userName
			, u.user_icon as userIcon
			, u.user_nickname as userNickname
			, u.handicap
			, u.user_grade as userGrade
			, u.role_model as roleModel
		from 
			tok_users u with(nolock)
			inner join
			tok_posts p with(nolock) on u.[user_id]=p.[user_id]
		where 
			u.user_id in (
				select 
					friend_id
				from 
					follow with(nolock)
				where 
					user_id=#{userId}
			)
		order by upload_date DESC
		OFFSET #{startIndex} ROW FETCH NEXT #{recordsPerPage} ROW ONLY
	</select>
	
</mapper>