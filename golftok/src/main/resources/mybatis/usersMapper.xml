<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.golfzon.golftok.mapper.UsersMapper">

	<resultMap id="usersResult" type="com.golfzon.golftok.model.TokUsers">
		<id property="userId" column="user_id"/>
		<result property="userName" column="user_name" />
		<result property="userNickname" column="user_nickname" />
		<result property="userPassword" column="user_password" />
		<result property="userIcon" column="user_icon" />
		<result property="introductionMessage" column="introduction_message" />
		<result property="userAge" column="user_age" />
		<result property="userGrade" column="user_grade" />
		<result property="followingCount" column="following_count" />
		<result property="followerCount" column="follower_count" />
	</resultMap>
	
	<resultMap id="followResult" type="com.golfzon.golftok.model.Follow">
		<id property="followId" column="follow_id"/>
		<result property="userId" column="user_id" />
		<result property="friendId" column="friend_id" />
	</resultMap>

	<!-- <resultMap id="requestResult" type="com.golfzon.golftok.model.Request">
		<id property="requestId" column="request_id"/>
		<result property="userId" column="user_id" />
		<result property="requestedId" column="requested_id" />
		<result property="requestDate" column="request_date" />
	</resultMap> -->

	<!-- 회원가입 -->
	<insert id="registerUser" parameterType="HashMap">
		<selectKey resultType="integer" keyProperty="userId" order="BEFORE">
			select MAX(user_id)+1 from tok_users
		</selectKey>
		insert into tok_users values
		(#{userId},#{userName},#{userPassword},#{userNickname},#{userIcon},
		#{introductionMessage},#{userAge},'참새',0,0)
	</insert>

	<!-- 내 골프 친구 보기 -->
	<select id="getMyFollowing" parameterType="int" resultType="HashMap">
		select 
			u.user_id as userId, u.user_name as userName, u.user_nickname as userNickname, u.user_icon as userIcon 
		from follow as f, tok_users as u
		where 
			f.user_id=#{userId} 
			and f.friend_id=u.user_id
	</select>
	
	<!-- 로그인 했을 경우-추천 계정 보기 : 자신의 나이대가 많이 팔로우 한 사람 추천 -->
	<select id="getRecommendedFriednsByOrders" parameterType="int" resultType="HashMap">
		select 
			user_id as userId, user_name as userName,user_nickname as userNickname, user_icon as userIcon
		from tok_users
		where (
				SELECT LEFT(user_age,1)
				from tok_users
				where user_id=#{userId}
			)=LEFT(user_age,1)
		order by follower_count DESC
	</select>

	<!-- 로그인 안했을 경우-추천 계정 보기 : 일주일 간 누적 좋아요를 많이 받은 계정 추천 -->
	<select id="getRecommendedFriednsByLikeCount" parameterType="int" resultType="HashMap">
		select 
			u.user_id as userId,user_name as userName,user_icon as userIcon,sum(like_count) as allLikeCount
		from tok_users u, tok_posts p
		where 
			u.user_id=p.user_id
			and upload_date<![CDATA[ >= ]]>(select DATEADD(dd,-7,getdate()))
		group by u.user_id, user_name, user_icon
		order by allLikeCount DESC
	</select>
	
	<!-- userName으로 user 객체 가져오기 -->
	<select id="getUserByUserName" parameterType="String" resultMap="usersResult">
		select * from tok_users
		where user_name=#{userName}
	</select>
	
	<!-- userId로 user 객체 가져오기 -->
	<select id="getUserByUserId" parameterType="int" resultMap="usersResult">
		select
			user_id as userId, user_name as userName, user_nickname as userNickname, user_icon as userIcon, 
			introduction_message as introductionMessage, user_age as userAge, user_grade as userGrade, 
			following_count as followingCount, follower_count as followerCount
		from tok_users
		where user_id=#{userId}
	</select>
	
	<!-- userName으로 userId 가져오기 -->
	<select id="getUserIdByUserName" parameterType="String" resultType="int">
		select user_id from tok_users
		where user_name=#{userName}
	</select>
	
	<!-- 팔로잉 -->
	<insert id="following" parameterType="HashMap">
		<selectKey resultType="integer" keyProperty="followId" order="BEFORE">
			select MAX(follow_id)+1 from follow
		</selectKey>
		insert into follow values
		(#{followId},#{userId},#{friendId})
	</insert>
	
	
	<!-- 팔로워 수 +1 -->
	<update id="increaseFollower" parameterType="int">
		update tok_users
		set follower_count+=1
		where user_id=#{friendId}
	</update>
	
	<!-- 팔로잉 수 +1 -->
	<update id="increaseFollowing" parameterType="int">
		update tok_users
		set following_count+=1
		where user_id=#{userId}
	</update>
	
	<!-- id로 비밀번호 얻기 -->
	<select id="getPasswordByUserName" parameterType="String" resultType="String">
		select user_password from tok_users
		where user_name=#{userName}
	</select>
	
	
		
	<!-- 골프 친구 신청 -->
	<!-- <insert id="requestGolfFriend" parameterType="HashMap">
		<selectKey resultType="integer" keyProperty="requestId" order="BEFORE">
			select MAX(request_id)+1 from friend_request
		</selectKey>
		insert into friend_request values
		(#{requestId},#{userId},#{requestedId},getdate())
	</insert> -->
	
	<!-- 골프 친구 승인 -->
	<!-- <insert id="approveFriendRequest" parameterType="HashMap">
		<selectKey resultType="integer" keyProperty="golfFriendId" order="BEFORE">
			select MAX(golf_friend_id)+1 from golf_friends
		</selectKey>
		insert into golf_friends values
		(#{golfFriendId},#{userId},#{friendId})
	</insert>
	 -->
	 
	<!-- 친구 신청 처리 후, 삭제 -->
	<!-- <delete id="deleteFriendRequset" parameterType="int">
		delete from friend_request
		where request_id=#{requestId}
	</delete> -->
	
	<!-- requsetId로 friendId 가져오기 -->
	<!-- <select id="getUserIdByRequestId" parameterType="int" resultType="int">
		select user_id from friend_request
		where request_id=#{requestId}
	</select> -->
</mapper>